{"ast":null,"code":"var _jsxFileName = \"/ui/pages/resume.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { Typography, Grid, TextField, Box, Switch, Chip } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Navbar from \"../components/navbar/navbar.component\"; // import apiFetch from \"../../service/apiFetch.service\";\n\nimport ParallelogramIcon from \"../components/icons/parallelogram.icon\";\nimport SquareIcon from \"../components/icons/square.icon\";\nimport { getFormValues } from \"../helper/getFormValues\";\nimport ResumeSection from \"../components/resume/resumeSection.component\";\nimport ResumePreview from \"../components/resume/resumePreview.component\";\nimport PersonalDetailsSection from \"../components/resume/personalDetails.component\";\nimport EducationSection from \"../components/resume/educationSection.component\";\nimport EmploymentSection from \"../components/resume/employmentSection.component\";\nimport LinkSection from \"../components/resume/linkSection.component\";\nexport default function Resume() {\n  const {\n    0: skills,\n    1: setSkills\n  } = useState([]);\n  const {\n    0: resume,\n    1: setResume\n  } = useState(undefined);\n  const {\n    0: resumeStyle,\n    1: setResumeStyle\n  } = useState(1);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const formRef = useRef(null);\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  useEffect(() => {\n    (async () => {\n      try {\n        // setResume({} as ResumeInterface);\n        const token = await getAccessTokenSilently();\n        const response = await fetch(`http://localhost:3001/v1/resume/0`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const responseData = await response.json();\n\n        if (responseData.statusCode === 404) {\n          const token = await getAccessTokenSilently();\n          const response1 = await fetch(`http://localhost:3001/v1/resume`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const responseData1 = await response1.json();\n          setResume(responseData1);\n          setSkills(responseData1.skills.map(({\n            name\n          }) => name));\n          console.log(skills, \"gets1\");\n        } else {\n          setResume(responseData);\n          const skilllIST = responseData.skills.map(({\n            name\n          }) => {\n            console.log(name);\n            return name;\n          });\n          setSkills(sk);\n          console.log(skills, sk, \"gets\");\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  const updateResume = async () => {\n    const form = formRef.current;\n    const formData = getFormValues(form);\n    formData.skills = skills;\n\n    try {\n      const token = await getAccessTokenSilently();\n      const response = await fetch(`http://localhost:3001/v1/resume/0`, {\n        method: \"PATCH\",\n        body: JSON.stringify(formData),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const responseData = await response.json();\n      setResume(responseData);\n      setSkills(responseData.skills.map(({\n        name\n      }) => name));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleChange = () => {\n    setChecked(!checked);\n    setResumeStyle(!checked ? 2 : 1);\n  };\n\n  const skillsList = [{\n    title: 'React'\n  }, {\n    title: 'Javascript'\n  }, {\n    title: 'Java'\n  }, {\n    title: 'Front-end'\n  }, {\n    title: 'Back-end'\n  }, {\n    title: 'UI Design'\n  }, {\n    title: 'UX Research'\n  }, {\n    title: 'Copywriting'\n  }, {\n    title: 'Illustrating'\n  }, {\n    title: 'Figma'\n  }];\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(ResumePreview, {\n    resume: resume,\n    resumeStyle: resumeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    p: 3,\n    pt: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    ref: formRef,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    pb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, !resume ? __jsx(Skeleton, {\n    variant: \"text\",\n    width: 140,\n    height: 26,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 34\n    }\n  }) : __jsx(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, \"Your R\\xE9sum\\xE9\")), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, __jsx(Switch, {\n    checked: checked,\n    onChange: handleChange,\n    name: \"checkedA\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }))))), __jsx(PersonalDetailsSection, {\n    loading: !resume,\n    onChange: updateResume,\n    firstName: resume && resume.user && resume.user.firstName,\n    lastName: resume && resume.user && resume.user.lastName,\n    phoneNumber: resume && resume.user && resume.user.phoneNumber,\n    email: resume && resume.user && resume.user.email,\n    title: resume && resume.resume && resume.resume.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), __jsx(ResumeSection, {\n    loading: !resume,\n    icon: __jsx(ParallelogramIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }),\n    heading: \"Describe you and your work\",\n    subtitle: \"Summarise your professional career in 2 or 3 sentences.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, !resume ? __jsx(Skeleton, {\n    variant: \"rect\",\n    width: \"100%\",\n    height: 114,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 31\n    }\n  }) : __jsx(TextField, {\n    name: \"bio\",\n    fullWidth: true,\n    id: \"filled-textarea\",\n    multiline: true,\n    variant: \"filled\",\n    rows: 4,\n    defaultValue: resume && resume.resume && resume.resume.bio,\n    onChange: () => updateResume(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  })), resume && __jsx(EmploymentSection, {\n    employment: resume === null || resume === void 0 ? void 0 : resume.jobs,\n    onChange: updateResume,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 28\n    }\n  }), resume && __jsx(EducationSection, {\n    educations: resume === null || resume === void 0 ? void 0 : resume.educations,\n    onChange: updateResume,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 28\n    }\n  }), resume && __jsx(ResumeSection, {\n    icon: __jsx(SquareIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }),\n    heading: \"Skills\",\n    subtitle: \"Add keywords to your resume to help potential employers get a clearer picture of what your skills are in the workplace.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 27\n    }\n  }, __jsx(Autocomplete, {\n    multiple: true,\n    id: \"skills\",\n    options: skillsList.map(option => option.title),\n    freeSolo: true,\n    renderTags: (value, getTagProps) => value.map((option, index) => __jsx(Chip, _extends({\n      color: \"primary\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }))) // defaultValue={skills}\n    ,\n    onChange: (event, value) => {\n      console.log(value);\n      setSkills(value); // console.log(resume)\n\n      updateResume();\n    },\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      variant: \"filled\",\n      placeholder: \"Add skills\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  })), resume && __jsx(LinkSection, {\n    links: resume === null || resume === void 0 ? void 0 : resume.links,\n    onChange: updateResume,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 28\n    }\n  })))))));\n}","map":{"version":3,"sources":["/ui/pages/resume.tsx"],"names":["useEffect","useState","useRef","Typography","Grid","TextField","Box","Switch","Chip","Skeleton","useAuth0","Autocomplete","Navbar","ParallelogramIcon","SquareIcon","getFormValues","ResumeSection","ResumePreview","PersonalDetailsSection","EducationSection","EmploymentSection","LinkSection","Resume","skills","setSkills","resume","setResume","undefined","resumeStyle","setResumeStyle","checked","setChecked","formRef","getAccessTokenSilently","token","response","fetch","headers","Accept","Authorization","responseData","json","statusCode","response1","method","responseData1","map","name","console","log","skilllIST","sk","error","message","updateResume","form","current","formData","body","JSON","stringify","handleChange","skillsList","title","user","firstName","lastName","phoneNumber","email","bio","jobs","educations","option","value","getTagProps","index","event","params","links"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Box,\n  Switch,\n  Chip\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { withAuthenticationRequired, useAuth0 } from \"@auth0/auth0-react\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Navbar from \"../components/navbar/navbar.component\";\n// import apiFetch from \"../../service/apiFetch.service\";\nimport ParallelogramIcon from \"../components/icons/parallelogram.icon\";\nimport SquareIcon from \"../components/icons/square.icon\";\nimport { getFormValues } from \"../helper/getFormValues\";\nimport { Resume as ResumeInterface } from \"../interface/resume.interface\";\nimport ResumeSection from \"../components/resume/resumeSection.component\";\nimport ResumePreview from \"../components/resume/resumePreview.component\";\nimport PersonalDetailsSection from \"../components/resume/personalDetails.component\";\nimport EducationSection from \"../components/resume/educationSection.component\";\nimport EmploymentSection from \"../components/resume/employmentSection.component\";\nimport LinkSection from \"../components/resume/linkSection.component\";\n\nexport default function Resume() {\n  const [skills, setSkills] = useState([]);\n  const [resume, setResume] = useState<ResumeInterface | undefined>(undefined);\n  const [resumeStyle, setResumeStyle] = useState<1 | 2>(1);\n  const [checked, setChecked] = useState(false);\n  const formRef = useRef<HTMLFormElement>(null);\n  const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        // setResume({} as ResumeInterface);\n        const token = await getAccessTokenSilently();\n  \n        const response = await fetch(\n          `http://localhost:3001/v1/resume/0`,\n          {\n            headers: {\n              Accept: \"application/json\",\n             \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n  \n        const responseData = await response.json();\n        if(responseData.statusCode === 404) {\n          const token = await getAccessTokenSilently();\n  \n        const response1 = await fetch(\n          `http://localhost:3001/v1/resume`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n             \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        const responseData1 = await response1.json();\n        setResume(responseData1 as ResumeInterface);\n\n        setSkills(responseData1.skills.map(({name}) => name))\n        console.log(skills,\"gets1\")\n        } else {\n\n        setResume(responseData as ResumeInterface);\n        const skilllIST = responseData.skills.map(({name}) => {console.log(name);return name})\n        setSkills(sk)\n        console.log(skills, sk,\"gets\")\n        }\n  \n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  const updateResume = async () => {\n    const form = formRef.current as HTMLFormElement;\n    const formData = getFormValues(form);\n    formData.skills = skills;\n    try {\n      const token = await getAccessTokenSilently();\n\n      const response = await fetch(\n        `http://localhost:3001/v1/resume/0`,\n        {\n          method: \"PATCH\",\n          body: JSON.stringify(formData),\n          headers: {\n            Accept: \"application/json\",\n           \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = await response.json();\n      setResume(responseData as ResumeInterface);\n      setSkills(responseData.skills.map(({name}) => name))\n\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const handleChange = () => {\n    setChecked(!checked);\n    setResumeStyle(!checked ? 2 : 1)\n  };\n  const skillsList = [\n    { title: 'React'},\n    { title: 'Javascript'},\n    { title: 'Java'},\n    { title: 'Front-end'},\n    { title: 'Back-end'},\n    { title: 'UI Design'},\n    { title: 'UX Research'},\n    { title: 'Copywriting'},\n    { title: 'Illustrating'},\n    { title: 'Figma'},\n  ];\n\n    return (\n        <>\n        <Navbar />\n      <Grid container>\n        <Grid item xs={12} sm={12} md={6}>\n          <ResumePreview resume={resume} resumeStyle={resumeStyle}/>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          <Box p={3} pt={12}>\n            <Grid container direction=\"column\">\n              <form ref={formRef} noValidate autoComplete=\"off\">\n                <Box pb={4}>\n                  <Grid item>\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\n                      <Grid item>\n                      {!resume ? <Skeleton variant=\"text\" width={140} height={26} />:\n                        <Typography variant=\"h2\">Your Résumé</Typography>\n                         } \n                      </Grid>\n                     \n                      <Grid item>\n                      <Switch\n                        checked={checked}\n                        onChange={handleChange}\n                        name=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Box>\n\n                <PersonalDetailsSection \n                loading={!resume}\n                onChange={updateResume}\n                firstName={resume && resume.user && resume.user.firstName} \n                lastName={resume && resume.user && resume.user.lastName} \n                phoneNumber={resume && resume.user && resume.user.phoneNumber} \n                email={resume && resume.user && resume.user.email} \n                title={resume && resume.resume && resume.resume.title}/>\n\n                <ResumeSection\n                  loading={!resume}\n                  icon={<ParallelogramIcon fontSize=\"large\" />}\n                  heading=\"Describe you and your work\"\n                  subtitle=\"Summarise your professional career in 2 or 3 sentences.\"\n                >\n                  {!resume ?  <Skeleton variant=\"rect\" width=\"100%\" height={114} />:\n                  <TextField\n                    name=\"bio\"\n                    fullWidth\n                    id=\"filled-textarea\"\n                    multiline\n                    variant=\"filled\"\n                    rows={4}\n                    defaultValue={resume && resume.resume && resume.resume.bio}\n                    onChange={() => updateResume()}\n                  />\n                  }\n                </ResumeSection> \n\n                {resume && <EmploymentSection employment={resume?.jobs} onChange={updateResume}/> }\n\n                {resume && <EducationSection educations={resume?.educations} onChange={updateResume}/>}\n                \n                {resume &&<ResumeSection\n                  icon={<SquareIcon fontSize=\"large\" />}\n                  heading=\"Skills\"\n                  subtitle=\"Add keywords to your resume to help potential employers get a clearer picture of what your skills are in the workplace.\"\n                >\n                  <Autocomplete\n                    multiple\n                    id=\"skills\"\n                    options={skillsList.map((option) => option.title)}\n                    freeSolo\n                    renderTags={(value, getTagProps) => \n                       value.map((option, index) => (\n                        <Chip color=\"primary\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    // defaultValue={skills}\n                    onChange={ (event, value) => {\n                      console.log(value)\n                       setSkills(value);\n                      // console.log(resume)\n                      updateResume()\n                  }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"filled\" placeholder=\"Add skills\" \n                      fullWidth\n                     />\n                    )}\n                  />\n                </ResumeSection>}\n\n                {resume && <LinkSection links={resume?.links} onChange={updateResume}/> }\n\n              </form>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n      </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}