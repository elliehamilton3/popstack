{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, useRef } from \"react\";\nimport { Button, Typography, Grid, TextField, Box, makeStyles, lighten, Switch } from \"@material-ui/core\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Navbar from \"../components/navbar/navbar.component\"; // import apiFetch from \"../../service/apiFetch.service\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ParallelogramIcon from \"../components/icons/parallelogram.icon\";\nimport SquareIcon from \"../components/icons/square.icon\";\nimport RectangleIcon from \"../components/icons/rectangle.icon\";\nimport { getFormValues } from \"../helper/getFormValues\";\nimport ResumeSection from \"../components/resume/resumeSection.component\";\nimport ResumePreview from \"../components/resume/resumePreview.component\";\nimport PersonalDetailsSection from \"../components/resume/personalDetails.component\";\nimport EducationSection from \"../components/resume/educationSection.component\";\nimport EmploymentSection from \"../components/resume/employmentSection.component\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    justifyContent: \"space-between\",\n    color: lighten(theme.palette.common.black, 0.4),\n    padding: \"10px 16px\"\n  },\n  icon: {\n    color: lighten(theme.palette.primary.light, 0.7)\n  }\n}));\nexport default function Resume() {\n  const {\n    0: resume,\n    1: setResume\n  } = useState(undefined);\n  const {\n    0: resumeStyle,\n    1: setResumeStyle\n  } = useState(1);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const classes = useStyles();\n  const formRef = useRef(null);\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently();\n        const response = await fetch(`http://localhost:3001/v1/resume/0`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const responseData = await response.json();\n\n        if (responseData.statusCode === 404) {\n          const token = await getAccessTokenSilently();\n          const response1 = await fetch(`http://localhost:3001/v1/resume`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const responseData1 = await response1.json();\n          setResume(responseData1);\n        } else {\n          setResume(responseData);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  const updateResume = async () => {\n    const form = formRef.current;\n    const formData = getFormValues(form);\n\n    try {\n      const token = await getAccessTokenSilently();\n      const response = await fetch(`http://localhost:3001/v1/resume/0`, {\n        method: \"PATCH\",\n        body: JSON.stringify(formData),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const responseData = await response.json();\n      setResume(responseData);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleChange = () => {\n    setChecked(!checked);\n    setResumeStyle(!checked ? 2 : 1);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, null), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6\n  }, __jsx(ResumePreview, {\n    resume: resume,\n    resumeStyle: resumeStyle\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6\n  }, __jsx(Box, {\n    p: 3,\n    pt: 12\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\"\n  }, __jsx(\"form\", {\n    ref: formRef,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(Box, {\n    pb: 4\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Typography, {\n    variant: \"h2\"\n  }, \"Your Resum\\xE9\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Switch, {\n    checked: checked,\n    onChange: handleChange,\n    name: \"checkedA\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    }\n  }))))), resume && __jsx(PersonalDetailsSection, {\n    onChange: updateResume,\n    firstName: resume && resume.user && resume.user.firstName,\n    lastName: resume && resume.user && resume.user.lastName,\n    phoneNumber: resume && resume.user && resume.user.phoneNumber,\n    email: resume && resume.user && resume.user.email,\n    title: resume && resume.resume && resume.resume.title\n  }), __jsx(ResumeSection, {\n    icon: __jsx(ParallelogramIcon, {\n      fontSize: \"large\"\n    }),\n    heading: \"Describe you and your work\",\n    subtitle: \"Summarise your professional career in 2 or 3 sentences.\"\n  }, __jsx(TextField, {\n    name: \"bio\",\n    fullWidth: true,\n    id: \"filled-textarea\",\n    multiline: true,\n    variant: \"filled\",\n    rows: 4,\n    defaultValue: resume && resume.resume && resume.resume.bio,\n    onChange: () => updateResume()\n  })), __jsx(EmploymentSection, {\n    employment: resume === null || resume === void 0 ? void 0 : resume.jobs,\n    onChange: updateResume\n  }), __jsx(EducationSection, {\n    educations: resume === null || resume === void 0 ? void 0 : resume.educations,\n    onChange: updateResume\n  }), __jsx(ResumeSection, {\n    icon: __jsx(RectangleIcon, {\n      fontSize: \"large\"\n    }),\n    heading: \"Websites & social media links\",\n    subtitle: \"Include a link to your personal website or portfolio, Github repository, LinkedIn, or anything you might want potential employers to see.\"\n  }, __jsx(Button, {\n    color: \"secondary\",\n    variant: \"outlined\",\n    className: classes.button,\n    fullWidth: true,\n    endIcon: __jsx(AddIcon, {\n      className: classes.icon\n    })\n  }, \"Add website or link\")), __jsx(ResumeSection, {\n    icon: __jsx(SquareIcon, {\n      fontSize: \"large\"\n    }),\n    heading: \"Skills\",\n    subtitle: \"Add any skills you have that you want to highlight.\"\n  }, __jsx(Button, {\n    color: \"secondary\",\n    variant: \"outlined\",\n    className: classes.button,\n    fullWidth: true,\n    endIcon: __jsx(AddIcon, {\n      className: classes.icon\n    })\n  }, \"Add a skill\"))))))));\n}","map":null,"metadata":{},"sourceType":"module"}