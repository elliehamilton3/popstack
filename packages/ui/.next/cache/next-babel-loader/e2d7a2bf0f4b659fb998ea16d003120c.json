{"ast":null,"code":"import { buffer } from 'micro';\nimport Cors from 'micro-cors';\nimport Stripe from 'stripe';\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  // https://github.com/stripe/stripe-node#configuration\n  apiVersion: '2020-08-27'\n});\nconst webhookSecret = process.env.STRIPE_WEBHOOK_SECRET; // Stripe requires the raw body to construct the event.\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nconst cors = Cors({\n  allowMethods: ['POST', 'HEAD']\n});\n\nconst webhookHandler = async (req, res) => {\n  if (req.method === 'POST') {\n    const buf = await buffer(req);\n    const sig = req.headers['stripe-signature'];\n    let event;\n\n    try {\n      event = stripe.webhooks.constructEvent(buf.toString(), sig, webhookSecret);\n    } catch (err) {\n      // On error, log and return the error message.\n      console.log(`❌ Error message: ${err.message}`);\n      res.status(400).send(`Webhook Error: ${err.message}`);\n      return;\n    } // Successfully constructed event.\n\n\n    console.log('✅ Success:', event.id); // Cast event data to Stripe object.\n\n    if (event.type === 'payment_intent.succeeded') {\n      const paymentIntent = event.data.object;\n      console.log(`💰 PaymentIntent status: ${paymentIntent.status}`);\n    } else if (event.type === 'payment_intent.payment_failed') {\n      var _paymentIntent$last_p;\n\n      const paymentIntent = event.data.object;\n      console.log(`❌ Payment failed: ${(_paymentIntent$last_p = paymentIntent.last_payment_error) === null || _paymentIntent$last_p === void 0 ? void 0 : _paymentIntent$last_p.message}`);\n    } else if (event.type === 'charge.succeeded') {\n      const charge = event.data.object;\n      console.log(`💵 Charge id: ${charge.id}`);\n    } else {\n      console.warn(`🤷‍♀️ Unhandled event type: ${event.type}`);\n    } // Return a response to acknowledge receipt of the event.\n\n\n    res.json({\n      received: true\n    });\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n};\n\nexport default cors(webhookHandler);","map":null,"metadata":{},"sourceType":"module"}