{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function fetchGetJSON(_x) {\n  return _fetchGetJSON.apply(this, arguments);\n}\n\nfunction _fetchGetJSON() {\n  _fetchGetJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(url).then(function (res) {\n              return res.json();\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            throw new Error(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _fetchGetJSON.apply(this, arguments);\n}\n\nexport function fetchPostJSON(_x2, _x3) {\n  return _fetchPostJSON.apply(this, arguments);\n}\n\nfunction _fetchPostJSON() {\n  _fetchPostJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(url, {\n              method: 'POST',\n              // *GET, POST, PUT, DELETE, etc.\n              mode: 'cors',\n              // no-cors, *cors, same-origin\n              cache: 'no-cache',\n              // *default, no-cache, reload, force-cache, only-if-cached\n              credentials: 'same-origin',\n              // include, *same-origin, omit\n              headers: {\n                'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n              },\n              redirect: 'follow',\n              // manual, *follow, error\n              referrerPolicy: 'no-referrer',\n              // no-referrer, *client\n              body: JSON.stringify(data || {}) // body data type must match \"Content-Type\" header\n\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error(_context2.t0.message);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n  return _fetchPostJSON.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/ellie/Developer/popstack/packages/ui/utils/api-helpers.ts"],"names":["fetchGetJSON","url","fetch","then","res","json","data","Error","message","fetchPostJSON","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response"],"mappings":";;AAAA,gBAAsBA,YAAtB;AAAA;AAAA;;;2EAAO,iBAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgBC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAACC,GAAD;AAAA,qBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,aAAhB,CAFhB;;AAAA;AAEGC,YAAAA,IAFH;AAAA,6CAGIA,IAHJ;;AAAA;AAAA;AAAA;AAAA,kBAKG,IAAIC,KAAJ,CAAU,YAAIC,OAAd,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASP,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO,kBAA6BR,GAA7B,EAA0CK,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGoBJ,KAAK,CAACD,GAAD,EAAM;AAChCS,cAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,cAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,cAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,cAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT,CAEP;;AAFO,eALuB;AAShCC,cAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,cAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAI,IAAI,EAAvB,CAX0B,CAWE;;AAXF,aAAN,CAHzB;;AAAA;AAGGc,YAAAA,QAHH;AAAA;AAAA,mBAgBUA,QAAQ,CAACf,IAAT,EAhBV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAkBG,IAAIE,KAAJ,CAAU,aAAIC,OAAd,CAlBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function fetchGetJSON(url: string) {\n  try {\n    const data = await fetch(url).then((res) => res.json())\n    return data\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n\nexport async function fetchPostJSON(url: string, data?: {}) {\n  try {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify(data || {}), // body data type must match \"Content-Type\" header\n    })\n    return await response.json() // parses JSON response into native JavaScript objects\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}