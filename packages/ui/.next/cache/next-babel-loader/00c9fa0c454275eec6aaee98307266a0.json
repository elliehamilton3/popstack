{"ast":null,"code":"export async function fetchGetJSON(url) {\n  try {\n    const data = await fetch(url).then(res => res.json());\n    return data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n}\nexport async function fetchPostJSON(url, data) {\n  try {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(data || {}) // body data type must match \"Content-Type\" header\n\n    });\n    return await response.json(); // parses JSON response into native JavaScript objects\n  } catch (err) {\n    throw new Error(err.message);\n  }\n}","map":{"version":3,"sources":["/Users/ellie/Developer/popstack/packages/ui/utils/api-helpers.ts"],"names":["fetchGetJSON","url","data","fetch","then","res","json","err","Error","message","fetchPostJSON","response","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify"],"mappings":"AAAA,OAAO,eAAeA,YAAf,CAA4BC,GAA5B,EAAyC;AAC9C,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAnB;AACA,WAAOJ,IAAP;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAG,CAACE,OAAd,CAAN;AACD;AACF;AAED,OAAO,eAAeC,aAAf,CAA6BT,GAA7B,EAA0CC,IAA1C,EAAqD;AAC1D,MAAI;AACF;AACA,UAAMS,QAAQ,GAAG,MAAMR,KAAK,CAACF,GAAD,EAAM;AAChCW,MAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,MAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,MAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,MAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OALuB;AAShCC,MAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,MAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAI,IAAI,EAAvB,CAX0B,CAWE;;AAXF,KAAN,CAA5B;AAaA,WAAO,MAAMS,QAAQ,CAACL,IAAT,EAAb,CAfE,CAe2B;AAC9B,GAhBD,CAgBE,OAAOC,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAG,CAACE,OAAd,CAAN;AACD;AACF","sourcesContent":["export async function fetchGetJSON(url: string) {\n  try {\n    const data = await fetch(url).then((res) => res.json())\n    return data\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n\nexport async function fetchPostJSON(url: string, data?: {}) {\n  try {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify(data || {}), // body data type must match \"Content-Type\" header\n    })\n    return await response.json() // parses JSON response into native JavaScript objects\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}