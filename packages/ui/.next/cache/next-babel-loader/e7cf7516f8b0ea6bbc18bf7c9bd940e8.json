{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ellie/Developer/popstack/packages/ui/components/CheckoutForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport getStripe from '../utils/get-stripejs';\nimport { fetchPostJSON } from '../utils/api-helpers';\nimport { Card, CardContent, Typography, CardActions, Button } from '@material-ui/core';\n\nvar CheckoutForm = function CheckoutForm() {\n  _s();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1]; // React.FormEventHandler<HTMLFormElement>\n\n\n  var handleSubmit = function handleSubmit(priceId) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var response, stripe, _yield$redirectToChec, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                setLoading(true); // Create a Checkout Session.\n\n                _context.next = 4;\n                return fetchPostJSON('/api/checkout_sessions', {\n                  priceId: priceId\n                });\n\n              case 4:\n                response = _context.sent;\n\n                if (!(response.statusCode === 500)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                console.error(response.message);\n                return _context.abrupt(\"return\");\n\n              case 8:\n                _context.next = 10;\n                return getStripe();\n\n              case 10:\n                stripe = _context.sent;\n                _context.next = 13;\n                return stripe.redirectToCheckout({\n                  // Make the id field from the Checkout Session creation API response\n                  // available to this file, so you can provide it as parameter here\n                  // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\n                  sessionId: response.id\n                });\n\n              case 13:\n                _yield$redirectToChec = _context.sent;\n                error = _yield$redirectToChec.error;\n                // If `redirectToCheckout` fails due to a browser or network\n                // error, display the localized error message to your customer\n                // using `error.message`.\n                console.warn(error.message);\n                setLoading(false);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(\"oneweek\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, __jsx(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\xA32\"), __jsx(Typography, {\n    variant: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"7-day trial\")), __jsx(CardActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    disabled: loading,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Pay now\")))), __jsx(\"ul\", {\n    className: \"card-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(\"monthly\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"card elements-style-background\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"\\xA35\"), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"1 month\"), __jsx(\"button\", {\n    className: \"elements-style-background\",\n    type: \"submit\",\n    disabled: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Pay now\")))), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(\"yearly\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"card cart-style-background\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"\\xA350\"), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"1 year\"), __jsx(\"button\", {\n    className: \"cart-style-background\",\n    type: \"submit\",\n    disabled: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Pay now\"))))));\n};\n\n_s(CheckoutForm, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/ellie/Developer/popstack/packages/ui/components/CheckoutForm.tsx"],"names":["React","useState","getStripe","fetchPostJSON","Card","CardContent","Typography","CardActions","Button","CheckoutForm","loading","setLoading","handleSubmit","priceId","e","preventDefault","response","statusCode","console","error","message","stripe","redirectToCheckout","sessionId","id","warn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport getStripe from '../utils/get-stripejs'\nimport { fetchPostJSON } from '../utils/api-helpers'\nimport { Card, CardContent, Typography, CardActions, Button } from '@material-ui/core'\n\nconst CheckoutForm = () => {\n  const [loading, setLoading] = useState(false)\n  // React.FormEventHandler<HTMLFormElement>\n  const handleSubmit = (priceId: \"oneweek\" |\"monthly\" | \"yearly\") => async (e: any) => {\n    e.preventDefault()\n    setLoading(true)\n    // Create a Checkout Session.\n    const response = await fetchPostJSON('/api/checkout_sessions', {\n      priceId\n    })\n\n    if (response.statusCode === 500) {\n      console.error(response.message)\n      return\n    }\n\n    // Redirect to Checkout.\n    const stripe = await getStripe()\n    const { error } = await stripe!.redirectToCheckout({\n      // Make the id field from the Checkout Session creation API response\n      // available to this file, so you can provide it as parameter here\n      // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\n      sessionId: response.id,\n    })\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n    console.warn(error.message)\n    setLoading(false)\n  }\n\n  return (\n<>\n<form onSubmit={handleSubmit(\"oneweek\")}>\n  <Card>\n      <CardContent>\n        <Typography>£2</Typography>\n        <Typography variant=\"h3\">7-day trial</Typography>\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" type=\"submit\" disabled={loading} color=\"primary\">Pay now</Button>\n      </CardActions>\n    </Card>\n    </form>\n      <ul className=\"card-list\">\n\n\n        <li>\n        <form onSubmit={handleSubmit(\"monthly\")}>\n            <a className=\"card elements-style-background\">\n              <h2>£5</h2>\n              <h3>1 month</h3>       \n              <button\n                className=\"elements-style-background\"\n                type=\"submit\"\n                disabled={loading}\n              >\n                Pay now \n              </button>        \n            </a>\n            </form>\n        </li>\n\n        <li>\n        <form onSubmit={handleSubmit(\"yearly\")}>\n            <a className=\"card cart-style-background\">\n              <h2>£50</h2>\n              <h3>1 year</h3>\n              <button\n                className=\"cart-style-background\"\n                type=\"submit\"\n                disabled={loading}\n              >\n                Pay now \n              </button>\n            </a>\n            </form>\n        </li>\n      </ul>\n      </>\n  )\n}\n\nexport default CheckoutForm\n"]},"metadata":{},"sourceType":"module"}