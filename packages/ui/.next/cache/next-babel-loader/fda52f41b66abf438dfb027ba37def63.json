{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/regenerator\";\nimport _extends from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"/Users/ellie/Developer/popstack/packages/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ellie/Developer/popstack/packages/ui/components/resume/resumePreview.component.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Grid, Paper, makeStyles, Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport PdfDocument from \"./pdfDocument.component\";\nimport PdfDocument2 from \"./pdfDocument2.component\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\nimport { Document as Doc, Page as DocPage } from \"react-pdf/dist/esm/entry.webpack\";\nimport blobStream from 'blob-stream';\nimport ResumeLoadingPlaceholder from \"./resumeLoadingPlaceholder.component\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      marginTop: \"40px\",\n      minHeight: \"calc(100vh - 192px)\",\n      minWidth: 0\n    },\n    pdfStyles: {\n      \"& canvas\": {\n        borderRadius: \"4px\",\n        height: \"calc(100vh - 200px) !important\",\n        width: \"auto !important\"\n      },\n      \"& div div div\": {\n        display: \"none\"\n      }\n    },\n    box: {\n      backgroundColor: \"#2C6DC5\",\n      padding: \"40px\",\n      height: \"calc(100vh - 64px)\",\n      \"@media (min-width: 960px)\": {\n        position: \"fixed\",\n        width: \"50%\",\n        top: \"64px\",\n        padding: 0\n      }\n    },\n    button: {\n      backgroundColor: theme.palette.common.white\n    },\n    pageWidth: {\n      width: \"calc(67vh - 96px)\",\n      \"@media (max-width: 960px)\": {\n        width: \"calc(67vh - 96px)\"\n      }\n    }\n  };\n});\nexport var generatePdfDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(documentData, resumeStyle) {\n    var blob, _blob;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(resumeStyle === 2)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return pdf(__jsx(PdfDocument2, _extends({}, documentData, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 28\n              }\n            }))).toBlob();\n\n          case 3:\n            blob = _context.sent;\n            saveAs(blob, \"cv.pdf\");\n            _context.next = 12;\n            break;\n\n          case 7:\n            if (!(resumeStyle === 1)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 10;\n            return pdf(__jsx(PdfDocument, _extends({}, documentData, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 28\n              }\n            }))).toBlob();\n\n          case 10:\n            _blob = _context.sent;\n            saveAs(_blob, \"cv.pdf\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function generatePdfDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar ResumePreview = function ResumePreview(_ref2) {\n  _s();\n\n  var resume = _ref2.resume,\n      resumeStyle = _ref2.resumeStyle;\n  var classes = useStyles();\n\n  var _useState = useState(),\n      generatedResume = _useState[0],\n      setGeneratedResume = _useState[1];\n\n  var _useState2 = useState(1),\n      numPages = _useState2[0],\n      setNumPages = _useState2[1];\n\n  var bufferToUrl = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(buffer) {\n      var stream, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              stream = buffer.pipe(blobStream());\n              _context2.next = 3;\n              return new Promise(function (resolve, reject) {\n                stream.on('finish', function () {\n                  resolve(stream.toBlobURL('application/pdf'));\n                });\n                stream.on('error', reject);\n              });\n\n            case 3:\n              url = _context2.sent;\n              setGeneratedResume(url ? url : \"\");\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function bufferToUrl(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (resume) {\n      if (resumeStyle === 2) {\n        pdf(__jsx(PdfDocument2, _extends({}, resume, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }))).toBuffer().then(bufferToUrl);\n      } else if (resumeStyle === 1) {\n        pdf(__jsx(PdfDocument, _extends({}, resume, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }))).toBuffer().then(bufferToUrl);\n      }\n    }\n  }, [resumeStyle, resume]); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function onDocumentLoadSuccess(_ref4) {\n    var numPages = _ref4.numPages;\n    setNumPages(numPages);\n  }\n\n  return __jsx(Box, {\n    className: classes.box,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.pageWidth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    elevation: 8,\n    className: \"\".concat(classes.paper, \" \").concat(generatedResume && classes.pdfStyles),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, !generatedResume ? __jsx(ResumeLoadingPlaceholder, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }) : __jsx(Doc, {\n    file: generatedResume,\n    onLoadSuccess: onDocumentLoadSuccess,\n    loading: __jsx(ResumeLoadingPlaceholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 22\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(DocPage, {\n    pageNumber: numPages,\n    style: {\n      width: \"0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    disabled: !resume // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    ,\n    onClick: function onClick() {\n      return generatePdfDocument(resume, resumeStyle);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Download as PDF\"))));\n};\n\n_s(ResumePreview, \"0840JTAYHOa5/lKh5y0LegUXC1g=\", false, function () {\n  return [useStyles];\n});\n\n_c = ResumePreview;\nexport default ResumePreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResumePreview\");","map":{"version":3,"sources":["/Users/ellie/Developer/popstack/packages/ui/components/resume/resumePreview.component.tsx"],"names":["Box","Grid","Paper","makeStyles","Button","React","useEffect","useState","PdfDocument","PdfDocument2","pdf","saveAs","Document","Doc","Page","DocPage","blobStream","ResumeLoadingPlaceholder","useStyles","theme","paper","marginTop","minHeight","minWidth","pdfStyles","borderRadius","height","width","display","box","backgroundColor","padding","position","top","button","palette","common","white","pageWidth","generatePdfDocument","documentData","resumeStyle","toBlob","blob","ResumePreview","resume","classes","generatedResume","setGeneratedResume","numPages","setNumPages","bufferToUrl","buffer","stream","pipe","Promise","resolve","reject","on","toBlobURL","url","toBuffer","then","onDocumentLoadSuccess"],"mappings":"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","sourcesContent":["import { Box, Grid, Paper, Typography, makeStyles, Button } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React, { useEffect, useState } from \"react\";\nimport PdfDocument from \"./pdfDocument.component\";\nimport PdfDocument2 from \"./pdfDocument2.component\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\nimport {\n  Document as Doc,\n  Page as DocPage,\n} from \"react-pdf/dist/esm/entry.webpack\";\nimport { Resume } from \"../../interface/resume.interface\";\nimport blobStream from 'blob-stream';\nimport ResumeLoadingPlaceholder from \"./resumeLoadingPlaceholder.component\";\n\nexport interface IResumePreviewProps {\n  resume: Resume | undefined;\n  resumeStyle: 1 | 2;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: \"40px\",\n      minHeight:  \"calc(100vh - 192px)\",\n      minWidth: 0,\n  },\n  pdfStyles: {\n    \"& canvas\": {\n  \n      borderRadius: \"4px\",\n\n        height: \"calc(100vh - 200px) !important\",\n        width: \"auto !important\",\n    },\n    \"& div div div\": {\n      display: \"none\",\n    },\n  },\n  box: {\n    backgroundColor: \"#2C6DC5\",\n    padding: \"40px\",\n    height: \"calc(100vh - 64px)\",\n    \"@media (min-width: 960px)\": {\n      position: \"fixed\",\n      width: \"50%\",\n      top: \"64px\",\n      padding: 0,\n    }\n  },\n  button: {\n    backgroundColor: theme.palette.common.white\n  },\n  pageWidth: {\n    width: \"calc(67vh - 96px)\",\n    \"@media (max-width: 960px)\": {\n      width: \"calc(67vh - 96px)\",\n    }\n  }\n}));\n\nexport const generatePdfDocument = async (documentData: Resume, resumeStyle: number) => {\n  if(resumeStyle === 2) {\n    const blob = await pdf(<PdfDocument2 {...documentData} />).toBlob();\n    saveAs(blob, \"cv.pdf\");\n  }\n  else if(resumeStyle === 1) {\n    const blob = await pdf(<PdfDocument {...documentData} />).toBlob();\n    saveAs(blob, \"cv.pdf\");\n  }\n};\n\nconst ResumePreview: React.FunctionComponent<IResumePreviewProps> = ({\n  resume,\n  resumeStyle\n}: IResumePreviewProps) => {\n  const classes = useStyles();\n  const [generatedResume, setGeneratedResume] = useState<string>();\n  const [numPages, setNumPages] = useState(1);\n  \n  const bufferToUrl = async (buffer: any) => {\n      const stream = buffer.pipe(blobStream());\n\n      const url:string = await new Promise((resolve, reject) => {\n        stream.on('finish', () => {\n          resolve(stream.toBlobURL('application/pdf'));\n        });\n        stream.on('error', reject);\n      });\n\n      setGeneratedResume(url ? url : \"\");\n  }\n\n  useEffect(() => {\n    if(resume) {\n      if(resumeStyle === 2) {\n        pdf(<PdfDocument2 {...resume!} />).toBuffer().then(bufferToUrl)\n      }\n      else if(resumeStyle === 1) {\n        pdf(<PdfDocument {...resume!} />).toBuffer().then(bufferToUrl)\n      }\n    }  \n  }, [resumeStyle, resume]);\n\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function onDocumentLoadSuccess({ numPages }: any) {\n    setNumPages(numPages);\n  }\n\n  return (\n    <Box className={classes.box}>\n      <Grid container alignItems=\"center\" direction=\"column\" spacing={2}>\n        <Grid item className={classes.pageWidth}>\n      <Paper\n        elevation={8}\n        className={`${classes.paper} ${generatedResume && classes.pdfStyles}`}\n      >\n        {!generatedResume ? (\n          <ResumeLoadingPlaceholder />\n        ) : (\n          <Doc\n            file={generatedResume}\n            onLoadSuccess={onDocumentLoadSuccess}\n            loading={<ResumeLoadingPlaceholder />}\n          >\n            <DocPage pageNumber={numPages} style={{ width: \"0px\" }} />\n          </Doc>\n        )}\n      </Paper>\n      </Grid>\n      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          className={classes.button}\n                          disabled={!resume}\n                          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                          onClick={() => generatePdfDocument(resume!, resumeStyle)}\n                        >\n                          Download as PDF\n                        </Button>\n                      </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ResumePreview;\n"]},"metadata":{},"sourceType":"module"}