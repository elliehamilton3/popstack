{"ast":null,"code":"import Stripe from 'stripe';\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  // https://github.com/stripe/stripe-node#configuration\n  apiVersion: '2020-08-27'\n});\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    try {\n      let price;\n      const trial = [];\n\n      if (req.body.priceId === \"oneweek\") {\n        price = process.env.WEEK_PRICE_ID;\n        trial.push({\n          price: process.env.MONTHLY_PRICE_ID,\n          quantity: 1\n        });\n      }\n\n      ;\n      if (req.body.priceId === \"monthly\") price = process.env.MONTHLY_PRICE_ID;\n      if (req.body.priceId === \"yearly\") price = process.env.YEARLY_PRICE_ID; // Create Checkout Sessions from body params.\n\n      const params = {\n        mode: \"subscription\",\n        payment_method_types: [\"card\"],\n        line_items: [{\n          price,\n          quantity: 1\n        }, ...trial],\n        subscription_data: trial.length > 0 ? {\n          trial_period_days: 7\n        } : undefined,\n        success_url: `${req.headers.origin}/result?session_id={CHECKOUT_SESSION_ID}`,\n        cancel_url: `${req.headers.origin}/pricing`\n      }; // console.log(params)\n\n      const checkoutSession = await stripe.checkout.sessions.create(params);\n      res.status(200).json(checkoutSession);\n    } catch (err) {\n      res.status(500).json({\n        statusCode: 500,\n        message: err.message\n      });\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n}","map":null,"metadata":{},"sourceType":"module"}